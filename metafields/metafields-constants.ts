import {
  RESOURCE_ARTICLE,
  RESOURCE_BLOG,
  RESOURCE_COLLECTION,
  RESOURCE_CUSTOMER,
  RESOURCE_LOCATION,
  RESOURCE_ORDER,
  RESOURCE_PAGE,
  RESOURCE_PRODUCT,
  RESOURCE_PRODUCT_VARIANT,
  RESOURCE_SHOP,
} from '../constants';
import { MetafieldOwnerType, ResourceMetafieldsSyncTableDefinition } from '../types/Metafields';

export const RESOURCE_METAFIELDS_SYNC_TABLE_DEFINITIONS: ResourceMetafieldsSyncTableDefinition[] = [
  {
    key: RESOURCE_ARTICLE,
    metafieldOwnerType: MetafieldOwnerType.Article,
    display: 'Article',
    metafieldsSettingsUrlPart: 'article',
    editMetafieldUrlPart: 'articles',
    ownerRestUrlPart: 'articles',
    syncTableGraphQlQueryOperation: 'articles', // TODO: no graphQL here
    graphQlQueryOperation: 'article', // TODO: no graphQL here
  },
  {
    key: RESOURCE_BLOG,
    metafieldOwnerType: MetafieldOwnerType.Blog,
    display: 'Blog',
    metafieldsSettingsUrlPart: 'blog',
    editMetafieldUrlPart: 'blogs',
    ownerRestUrlPart: 'blogs',
    syncTableGraphQlQueryOperation: 'blogs', // TODO: no graphQL here
    graphQlQueryOperation: 'blog', // TODO: no graphQL here
    storeFront: true,
  },
  {
    key: RESOURCE_COLLECTION,
    metafieldOwnerType: MetafieldOwnerType.Collection,
    display: 'Collection',
    metafieldsSettingsUrlPart: 'collection',
    editMetafieldUrlPart: 'collections',
    ownerRestUrlPart: 'collections',
    syncTableGraphQlQueryOperation: 'collections',
    graphQlQueryOperation: 'collection',
  },
  // {
  //   key: 'smart_collection',
  //   metafieldOwnerType: 'LOL',
  //   display: 'Smart Collection',
  //   adminUrlPart: 'collection',
  //   adminEntryUrlPart: 'collections',
  //   graphQlQueryOperation: 'collections',
  // },
  {
    key: RESOURCE_CUSTOMER,
    metafieldOwnerType: MetafieldOwnerType.Customer,
    display: 'Customer',
    metafieldsSettingsUrlPart: 'customer',
    editMetafieldUrlPart: 'customers',
    ownerRestUrlPart: 'customers',
    syncTableGraphQlQueryOperation: 'customers',
    graphQlQueryOperation: 'customer',
  },
  // TODO: maybe add suppoort for draft orders later
  // {
  //   key: 'draft_order',
  //   metafieldOwnerType: MetafieldOwnerType.Draftorder,
  //   display: 'Draft Order',
  //   adminUrlPart: 'draftOrder',
  //   adminEntryUrlPart: 'draftOrders',
  //   graphQlQueryOperation: 'draftOrders',
  // },
  {
    key: RESOURCE_LOCATION,
    metafieldOwnerType: MetafieldOwnerType.Location,
    display: 'Location',
    metafieldsSettingsUrlPart: 'location',
    editMetafieldUrlPart: 'locations',
    ownerRestUrlPart: 'locations',
    syncTableGraphQlQueryOperation: 'locations',
    graphQlQueryOperation: 'location',
  },
  {
    key: RESOURCE_ORDER,
    metafieldOwnerType: MetafieldOwnerType.Order,
    display: 'Order',
    metafieldsSettingsUrlPart: 'order',
    editMetafieldUrlPart: 'orders',
    ownerRestUrlPart: 'orders',
    syncTableGraphQlQueryOperation: 'orders',
    graphQlQueryOperation: 'order',
  },
  {
    key: RESOURCE_PAGE,
    metafieldOwnerType: MetafieldOwnerType.Page,
    display: 'Page',
    metafieldsSettingsUrlPart: 'page',
    editMetafieldUrlPart: 'pages',
    ownerRestUrlPart: 'pages',
    syncTableGraphQlQueryOperation: 'pages', // TODO: no graphQL here
    graphQlQueryOperation: 'page', // TODO: no graphQL here
    storeFront: true,
  },
  {
    key: RESOURCE_PRODUCT,
    metafieldOwnerType: MetafieldOwnerType.Product,
    display: 'Product',
    metafieldsSettingsUrlPart: 'product',
    editMetafieldUrlPart: 'products',
    ownerRestUrlPart: 'products',
    syncTableGraphQlQueryOperation: 'products',
    graphQlQueryOperation: 'product',
    storeFront: true,
  },
  // {
  //   key: 'product_image',
  //   metafieldOwnerType: 'LOL',
  //   display: 'Product Image',
  //   adminUrlPart: 'article',
  //   adminEntryUrlPart: 'articles',
  //   graphQlQueryOperation: 'articles',
  // },
  {
    key: RESOURCE_PRODUCT_VARIANT,
    metafieldOwnerType: MetafieldOwnerType.Productvariant,
    display: 'Product Variant',
    metafieldsSettingsUrlPart: 'productVariant',
    editMetafieldUrlPart: 'productVariants',
    ownerRestUrlPart: 'productVariants',
    syncTableGraphQlQueryOperation: 'productVariants',
    graphQlQueryOperation: 'productVariant',
    // storeFront: true,
  },
  {
    key: RESOURCE_SHOP,
    metafieldOwnerType: MetafieldOwnerType.Shop,
    display: 'Shop',
    metafieldsSettingsUrlPart: 'shop',
    editMetafieldUrlPart: 'shop',
    ownerRestUrlPart: 'shop',
    syncTableGraphQlQueryOperation: 'shop',
    graphQlQueryOperation: 'shop',
  },
];
